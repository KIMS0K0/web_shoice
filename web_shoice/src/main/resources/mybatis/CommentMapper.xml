<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sk.board.mapper.CommentMapper">



    <!-- MemberDto에 대한 별도의 resultMap 정의 -->
<resultMap id="commentResultMap" type="CommentDto">
    <id property="comment_seq" column="comment_seq"/>
    <result property="board_seq" column="board_seq"/>
    <result property="id" column="id"/>
    <result property="content" column="content"/>
    <result property="regdate" column="regdate"/>

    <association property="member" javaType="MemberDto">
        <id property="memberId" column="memberid"/>
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="role" column="role"/>
        <result property="job" column="job"/>
        <association property="profileDto" javaType="ProfileDto">
            <id property="file_seq" column="file_seq"/>
            <result property="stored_name" column="stored_name"/>
        </association>
    </association>

    <!-- ReplyDto 매핑 -->
    <collection property="replies" ofType="ReplyDto">
        <id property="reply_seq" column="reply_seq"/>
        <result property="comment_seq" column="comment_seq"/>
        <result property="id" column="reply_id"/> <!-- reply 테이블의 id와 충돌 방지 -->
        <result property="content" column="reply_content"/>
        <result property="regdate" column="reply_regdate"/>
        
        <association property="member" javaType="MemberDto">
            <id property="memberId" column="reply_memberid"/>
            <result property="id" column="reply_member_id"/>
            <result property="name" column="reply_member_name"/>
            <result property="email" column="reply_member_email"/>
            <result property="address" column="reply_member_address"/>
            <result property="role" column="reply_member_role"/>
            <result property="job" column="reply_member_job"/>
            <association property="profileDto" javaType="ProfileDto">
	            <id property="file_seq" column="file_seq"/>
	            <result property="stored_name" column="reply_member_stored_name"/>
	        </association>
        </association>
    </collection>
</resultMap>


<select id="getComments" parameterType="Integer" resultMap="commentResultMap">
    SELECT c.comment_seq, c.board_seq, c.id, c.content, c.regdate,
           m.memberid, m.id AS member_id, m.name, m.email, m.address, m.role, m.job,
           p.file_seq, p.stored_name,
        
	        r.reply_seq AS reply_seq, r.comment_seq AS reply_comment_seq, r.id AS reply_id, r.content AS reply_content, r.regdate AS reply_regdate,
	        rm.memberid AS reply_memberid, rm.id AS reply_member_id, rm.name AS reply_member_name, rm.email AS reply_member_email, 
	        rm.address AS reply_member_address, rm.role AS reply_member_role, rm.job AS reply_member_job,
	        
	        rp.stored_name AS reply_member_stored_name
        
    FROM comment c
    LEFT JOIN member m ON c.id = m.id
    LEFT JOIN profile p ON m.id = p.id
    LEFT JOIN reply r ON c.comment_seq = r.comment_seq
    LEFT JOIN member rm ON r.id = rm.id
    LEFT JOIN profile rp ON rp.id = rm.id
    
    WHERE c.board_seq = #{board_seq}
    ORDER BY c.regdate, r.regdate
</select>


    <!-- 댓글 삽입 쿼리 -->
    <insert id="addComment" parameterType="CommentDto">
        INSERT INTO comment (comment_seq, board_seq, id, content, regdate)
        VALUES (NULL, #{board_seq}, #{id}, #{content}, NOW());
    </insert>
    
    <delete id="deleteComment" parameterType="int">
    	DELETE FROM COMMENT
    	WHERE comment_seq = #{comment_seq}
    </delete>

</mapper>
